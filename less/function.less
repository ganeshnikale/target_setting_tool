@colors : #ED5565, #A0D468, #F6BB42, #5D9CEC;
@names  : error, success, attention, info;
@length : length(@colors);


.alert-variation(@names; @colors; @index) when (iscolor(extract(@colors, @index))) and (@index > 0) {
    .alert-variation(@names; @colors; (@index - 1)); // decrement.

  @name  : extract(@names, @index);
  @color : extract(@colors, @index);

  .alert-@{name} {
    border-color: darken(@color, 10%);
    color: darken(@color, 30%);
    background-color: @color;
  }
}

.alert-variation(@names; @colors; @length);


/*************/

.generate-columns(4);

.generate-columns(@n, @i: 1) when (@i =< @n) {
  .column-@{i} {
    width: (@i * 100% / @n);
  }
  .generate-columns(@n, (@i + 1));
}

/*************/

.theme (@mode) when (@mode = "dark") {
  background-color: darkblue;
}
.theme (@mode) when (@mode = "light") {
  background-color: lightblue;
}
.theme (@mode) when (default()) {
  background-color: @mode;
}

div {
  width: 50px;
  height: 50px;
  .theme("light");
}
/*******************/
.make-variants(@i:1) when (@i =< 3) {
  .variant-@{i} {
    width: @i * 40px;
    height: @i * 20px;
    background-color: orange;
    margin-bottom: 10px;
    }
  .make-variants(@i + 1); // increment function
}

.make-variants();
/**********/
@images: "../img";
@themes: "../../src/themes";


/************/

.foo {
  color: red;
}
.bar {
  &:extend(.foo);
}


.foo,
.bar {
  color: red;
}


.module {
  padding: 10px;
  h3 {
    color: red; 
  }
}

.news {
  &:extend(.module);
}

.module,
.news {
  padding: 10px;
}
.module h3 {
  color: red;
}

.news {
  &:extend(.module all);
}